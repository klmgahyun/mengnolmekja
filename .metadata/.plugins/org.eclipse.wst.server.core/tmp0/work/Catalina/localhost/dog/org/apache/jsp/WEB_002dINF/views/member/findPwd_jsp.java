/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.82
 * Generated at: 2023-12-14 10:16:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class findPwd_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1699593622000L));
    _jspx_dependants.put("jar:file:/C:/Users/user1/Desktop/dd/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Dog/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("       \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n");
      out.write("<link href=\"resources/css/member/findPwd.css\" rel=\"stylesheet\" type=\"text/css\"></head>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("   <form class=\"form\" action=\"selectfindPwd.me\" method=\"POST\" onsubmit=\"return checkEmail()\">\r\n");
      out.write("        <div class=\"logo\">\r\n");
      out.write("         <img src=\"resources/image/logo.png\" onclick=\"location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/home'\">\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"title\"><label>비밀번호 찾기</label></div>\r\n");
      out.write("       \r\n");
      out.write("       <table class=\"table\">\r\n");
      out.write("         <tr><td><input type=\"text\" placeholder=\"아이디\" name=\"userId\" id=\"userId\" autofocus></td></tr>\r\n");
      out.write("         <tr>\r\n");
      out.write("            <td><input type=\"email\" id=\"email\" name=\"email\" placeholder=\"이메일\" >\r\n");
      out.write("             <input type=\"button\" id=\"mail-Check-Btn\" value=\"인증하기\"></td>\r\n");
      out.write("         </tr>\r\n");
      out.write("         <tr><td><input type=\"text\" id=\"EmailCheckNo\" placeholder=\"인증번호 입력\"></td></tr>\r\n");
      out.write("         <tr><td><input type=\"submit\" id=\"deleteBtn\" value=\"비밀번호 변경\"></td></tr>\r\n");
      out.write("      </table>\r\n");
      out.write("   </form>\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   <script>\r\n");
      out.write("      const mailCheck = document.getElementById('mailCheckNo');\r\n");
      out.write("      let checkE=false;\r\n");
      out.write("      \r\n");
      out.write("      function checkEmail() {\r\n");
      out.write("         \r\n");
      out.write("         if(checkE){\r\n");
      out.write("            return true;\r\n");
      out.write("         }else{\r\n");
      out.write("            alert(\"이메일 인증을 먼저 완료해주세요.\");\r\n");
      out.write("            return false;\r\n");
      out.write("         }\r\n");
      out.write("      }\r\n");
      out.write("      const equals = () =>{\r\n");
      out.write("         if(mailCheck == code){\r\n");
      out.write("            location.href='changePwd.me?userid=' + userId;\r\n");
      out.write("         }\r\n");
      out.write("      }\r\n");
      out.write("   </script>\r\n");
      out.write("   \r\n");
      out.write("   <script>\r\n");
      out.write("      window.onload=()=>{\r\n");
      out.write("         \r\n");
      out.write("         let msg = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("         if(msg != \"\"){\r\n");
      out.write("            alert(msg);\r\n");
      out.write("         }\r\n");
      out.write("         msg = \"\";\r\n");
      out.write("         \r\n");
      out.write("         \r\n");
      out.write("         let code=\"\";\r\n");
      out.write("         \r\n");
      out.write("         console.log(checkE);\r\n");
      out.write("         \r\n");
      out.write("           /*누른경우에만  체크 해줘야 함*/\r\n");
      out.write("           let check_button=false;\r\n");
      out.write("           /*인증체크하는곳*/\r\n");
      out.write("           $('#mail-Check-Btn').click(function() {\r\n");
      out.write("               const checkInput = $('.mail-check-input');    // 인증번호 입력하는곳 \r\n");
      out.write("               check_button=true;\r\n");
      out.write("               console.log(document.getElementById('email').value);\r\n");
      out.write("               $.ajax({\r\n");
      out.write("                  type : 'get',\r\n");
      out.write("                   url : 'mailCheck.me',                // GET방식이라 Url 뒤에 email을 뭍힐수있다.\r\n");
      out.write("                   data: {Email:document.getElementById('email').value},\r\n");
      out.write("                   success : function (data) {\r\n");
      out.write("                      console.log(\"data : \" +  data);\r\n");
      out.write("                       checkInput.attr('disabled',false);\r\n");
      out.write("                       code =data;\r\n");
      out.write("                       alert('인증번호를 발송했습니다. 인증번호가 오지 않으면 입력하신 정보가 회원정보와 일치하는지 확인해 주세요.')\r\n");
      out.write("                    }         \r\n");
      out.write("            }); \r\n");
      out.write("           }); \r\n");
      out.write("           \r\n");
      out.write("           /* 받아온 랜덤 코드를 비교하는 부분 인증코드 input에서 포커스를 잃었을시 확인*/\r\n");
      out.write("           $('#EmailCheckNo').blur(function () {\r\n");
      out.write("               console.log(code);\r\n");
      out.write("               let inputCode = this.value;\r\n");
      out.write("               if(check_button){\r\n");
      out.write("                  if(inputCode == code){\r\n");
      out.write("                     checkE=true;\r\n");
      out.write("                     console.log(checkE);\r\n");
      out.write("                     $('#EmailCheckNo').css(\"borderColor\", \"green\");\r\n");
      out.write("                  } else {\r\n");
      out.write("                     checkE=false;\r\n");
      out.write("                     $('#EmailCheckNo').css(\"borderColor\", \"red\");\r\n");
      out.write("                   }\r\n");
      out.write("               }\r\n");
      out.write("           });\r\n");
      out.write("      }\r\n");
      out.write("   </script>\r\n");
      out.write("   \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
