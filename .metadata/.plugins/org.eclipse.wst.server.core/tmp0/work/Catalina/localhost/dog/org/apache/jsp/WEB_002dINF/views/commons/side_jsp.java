/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.82
 * Generated at: 2023-12-14 10:12:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.commons;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class side_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("@charset \"UTF-8\";\r\n");
      out.write("\r\n");
      out.write("    /* 공통 스타일 */\r\n");
      out.write("    .header-footer {\r\n");
      out.write("      background-color: rgb(255, 249, 204);\r\n");
      out.write("      color: white;\r\n");
      out.write("      height: 180px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .header-footer .logo {\r\n");
      out.write("      margin-top: -50px;\r\n");
      out.write("      float: left;\r\n");
      out.write("      height: 300px;\r\n");
      out.write("      width: 600px;\r\n");
      out.write("      padding-left: 150px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .header-footer .logo a {\r\n");
      out.write("      color: white;\r\n");
      out.write("      text-decoration: none;\r\n");
      out.write("      font-weight: normal;\r\n");
      out.write("      font-family: 'Nanum Myeongjo', serif;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .header-footer .logo a span {\r\n");
      out.write("      position: absolute;\r\n");
      out.write("      top: 80px;\r\n");
      out.write("      width: 300px;\r\n");
      out.write("      font-weight: bold;\r\n");
      out.write("      font-size: 1em;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .header-footer nav {\r\n");
      out.write("      padding-top: 50px;\r\n");
      out.write("      display: flex;\r\n");
      out.write("      justify-content: center;\r\n");
      out.write("      margin-bottom: 2em;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .header-footer nav a {\r\n");
      out.write("      text-decoration: none;\r\n");
      out.write("      color: black;\r\n");
      out.write("      margin: 0 1em;\r\n");
      out.write("      font-size: 1.5em;\r\n");
      out.write("      font-weight: bold;\r\n");
      out.write("      font-family: 'Nanum Myeongjo', serif;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .header-footer #login,\r\n");
      out.write("    .header-footer #manager {\r\n");
      out.write("      list-style: none;\r\n");
      out.write("      padding: 20px;\r\n");
      out.write("      position: absolute;\r\n");
      out.write("      color: black;\r\n");
      out.write("      font-size: 1em;\r\n");
      out.write("      top: 50px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .header-footer #login a,\r\n");
      out.write("    .header-footer #manager a {\r\n");
      out.write("      text-decoration: none;\r\n");
      out.write("      color: black;\r\n");
      out.write("      font-family: 'Nanum Myeongjo', serif;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* 사이드바 스타일 */\r\n");
      out.write("    .sidebar {\r\n");
      out.write("      text-align:left;\r\n");
      out.write("      position: fixed;\r\n");
      out.write("      top: 50%;\r\n");
      out.write("      transform: translateY(-50%);\r\n");
      out.write("      left: 30px;\r\n");
      out.write("      height: 425px;\r\n");
      out.write("      width: 250px;\r\n");
      out.write("      padding-top: 10px;\r\n");
      out.write("      background-color: #fff9c4; \r\n");
      out.write("      border-radius: 8px;\r\n");
      out.write("      border-right: 1px solid #dee2e6;\r\n");
      out.write("      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .sidebar a {\r\n");
      out.write("      color: #856404;\r\n");
      out.write("      text-decoration: none;\r\n");
      out.write("      font-size: 22px;\r\n");
      out.write("      padding: 8px;\r\n");
      out.write("      display: block;\r\n");
      out.write("      transition: background-color 0.3s;\r\n");
      out.write("      margin-left: 12px;\r\n");
      out.write("      background: #fff9c4;\r\n");
      out.write("      border-radius: 15px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .sidebar a:hover {\r\n");
      out.write("      background-color: #ffd700; /* 더 옅은 노란색으로 변경 */\r\n");
      out.write("      border-radius: 15px;\r\n");
      out.write("      cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .sidebar a:hover,\r\n");
      out.write("    .sidebar a:visited {\r\n");
      out.write("      border-radius: 15px;\r\n");
      out.write("      text-decoration: none;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .content {\r\n");
      out.write("      margin-left: 184px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"container-fluid\">\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("	   		<!-- Sidebar -->\r\n");
      out.write("			<nav class=\"col-md-2 d-none d-md-block sidebar\">\r\n");
      out.write("				<div class=\"sidebar-sticky\">\r\n");
      out.write("			     <!-- Sidebar 내용 -->\r\n");
      out.write("					<ul class=\"nav flex-column\">\r\n");
      out.write("						<li class=\"nav-item\">\r\n");
      out.write("							<a class=\"nav-link active\" href=\"myRequest.do\">\r\n");
      out.write("								<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-headset\" viewBox=\"0 0 16 16\">\r\n");
      out.write("								  <path d=\"M8 1a5 5 0 0 0-5 5v1h1a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V6a6 6 0 1 1 12 0v6a2.5 2.5 0 0 1-2.5 2.5H9.366a1 1 0 0 1-.866.5h-1a1 1 0 1 1 0-2h1a1 1 0 0 1 .866.5H11.5A1.5 1.5 0 0 0 13 12h-1a1 1 0 0 1-1-1V8a1 1 0 0 1 1-1h1V6a5 5 0 0 0-5-5z\"/>\r\n");
      out.write("								</svg>\r\n");
      out.write("	              				&nbsp; 상담 예약 내역\r\n");
      out.write("							</a>\r\n");
      out.write("						</li>\r\n");
      out.write("						\r\n");
      out.write("						<li class=\"nav-item\">\r\n");
      out.write("							<a class=\"nav-link active\" href=\"selectMyResList.re\">\r\n");
      out.write("							<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-calendar3\" viewBox=\"0 0 16 16\">\r\n");
      out.write("							  <path d=\"M14 0H2a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zM1 3.857C1 3.384 1.448 3 2 3h12c.552 0 1 .384 1 .857v10.286c0 .473-.448.857-1 .857H2c-.552 0-1-.384-1-.857V3.857z\"/>\r\n");
      out.write("							  <path d=\"M6.5 7a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm-9 3a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm-9 3a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\"/>\r\n");
      out.write("							</svg>\r\n");
      out.write("	              				&nbsp; 호텔 예약 내역\r\n");
      out.write("							</a>\r\n");
      out.write("						</li>\r\n");
      out.write("						<li class=\"nav-item\">\r\n");
      out.write("							<a class=\"nav-link active\" href=\"myWriter.go\">\r\n");
      out.write("							<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-card-heading\" viewBox=\"0 0 16 16\">\r\n");
      out.write("							  <path d=\"M14.5 3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h13zm-13-1A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h13a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-13z\"/>\r\n");
      out.write("							  <path d=\"M3 8.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5zm0-5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-9a.5.5 0 0 1-.5-.5v-1z\"/>\r\n");
      out.write("							</svg>\r\n");
      out.write("	              				&nbsp; 내가 작성한 글\r\n");
      out.write("							</a>\r\n");
      out.write("						</li>\r\n");
      out.write("						<li class=\"nav-item\">\r\n");
      out.write("							<a class=\"nav-link\" href=\"myInfo.me\">\r\n");
      out.write("							<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\r\n");
      out.write("							  <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\r\n");
      out.write("							  <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\r\n");
      out.write("							</svg>\r\n");
      out.write("								&nbsp; 내 정보 수정\r\n");
      out.write("							</a>\r\n");
      out.write("						</li>\r\n");
      out.write("						<!-- 추가적인 메뉴 항목들 -->\r\n");
      out.write("					</ul>\r\n");
      out.write("				</div>\r\n");
      out.write("			</nav>\r\n");
      out.write("		</div>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
