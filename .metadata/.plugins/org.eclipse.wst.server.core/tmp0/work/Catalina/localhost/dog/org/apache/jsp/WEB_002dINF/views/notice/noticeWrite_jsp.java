/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.82
 * Generated at: 2023-12-14 09:41:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.notice;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class noticeWrite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"UTF-8\">\r\n");
      out.write("<head>\r\n");
      out.write("<style>\r\n");
      out.write(".input-file-button{\r\n");
      out.write("  padding: 6px 25px;\r\n");
      out.write("  background-color:white;\r\n");
      out.write("  border-radius: 4px;\r\n");
      out.write("  color: black;\r\n");
      out.write("  border: solid 1px black;\r\n");
      out.write("  cursor: pointer;\r\n");
      out.write("  right: 1200px;\r\n");
      out.write("  width:400px;\r\n");
      out.write("  position: absolute;\r\n");
      out.write("}\r\n");
      out.write("input::file-selector-button{\r\n");
      out.write("   display: none;\r\n");
      out.write("}\r\n");
      out.write(".btn{\r\n");
      out.write("   cursor: pointer;\r\n");
      out.write("   background: black; \r\n");
      out.write("   color: white; \r\n");
      out.write("   width: 80px; \r\n");
      out.write("   height: 40px;\r\n");
      out.write("   position: absolute;\r\n");
      out.write("}\r\n");
      out.write(".myPage{\r\n");
      out.write("   \r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=, initial-scale=1.0\">\r\n");
      out.write("<title>공지 사항</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.1.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"resources/css/ming/notice.css\">\r\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/ming/header.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/ming/footer.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("   ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../commons/Nav2.jsp", out, false);
      out.write("\r\n");
      out.write("         <form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/inserNotice.bo\" method=\"POST\" enctype=\"multipart/form-data\" id=\"attmForm\"> \r\n");
      out.write("            <div class=\"board_wrap\">\r\n");
      out.write("               <div class=\"board_title\">\r\n");
      out.write("                     <strong>공지사항 </strong>\r\n");
      out.write("                   <p>공지사항을 빠르고 정확하게 안내드립니다.</p>\r\n");
      out.write("                 </div>\r\n");
      out.write("                 <div class=\"board_write_wrap\">\r\n");
      out.write("                  <div class=\"board_write\">\r\n");
      out.write("                      <div class=\"title\">\r\n");
      out.write("                       <dl>\r\n");
      out.write("                           <dt>제목</dt>\r\n");
      out.write("                           <dd><input type=\"text\" placeholder=\"제목 입력\" name=\"noticeTitle\" required></dd>\r\n");
      out.write("                       </dl>\r\n");
      out.write("                   </div>\r\n");
      out.write("                   <div class=\"cont\">\r\n");
      out.write("                       <textarea placeholder=\"내용 입력\" name=\"noticeContent\" required></textarea>\r\n");
      out.write("                   </div>\r\n");
      out.write("                   <div id=\"fileArea\">\r\n");
      out.write("                  <div class=\"bt_wrap1\">\r\n");
      out.write("                  <label class=\"input-file-button\" for=\"input-file\">\r\n");
      out.write("                      <input type=\"file\" class=\"btnFile\" name=\"file\" id=\"input-file\">\r\n");
      out.write("                  </label>\r\n");
      out.write("                   </div>\r\n");
      out.write("                </div>\r\n");
      out.write("               </div>\r\n");
      out.write("               <div class=\"bt_wrap1\">\r\n");
      out.write("                  <button class=\"btn\" style=\"left: 1470px;\">등록</button>\r\n");
      out.write("                  <button type=\"button\" onclick=\"javascript:history.back();\" class=\"btn\" style=\"left: 1570px;\">취소</button>\r\n");
      out.write("               </div>\r\n");
      out.write("           </div>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../commons/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
